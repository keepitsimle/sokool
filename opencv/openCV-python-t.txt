opencv:	
	0.基础的概念:
		q.数字图像:
			每个像素点对应像素点矩阵的强度值;值越大表示越亮

		w.通道:每个像素点由几个颜色合成
			RGB     三通道 图像由三个Red Green Blue颜色合成
			单通道  只用1bit表示 0为黑色
			四通道	在RGB上加入alpha通道,表示透明度,alpha = 0 全透明

		e.深度
			a.位深:一个像素点所占有的总位数,像素深度,图像深度; == 通道数 * 每个通道的位数
			

	1.图像的表示:
		a.
			单通道的灰度图像表示:
				8bits 无符号的矩阵
					在cpp使用cv::Mat表示
					Python-opencv 使用numpy.array
		b.
			多通道3/4 常见的是RGB三通道
				第一/二维度:高度 第三维度:通道

		c.
			在opencv中使用的是BGR
			在matplotlib中使用的是RGB
			这两个存储的方式不一样.同一张图像显示不一样.

	2.图像的基本操作:
		q.存取图像
		w.图像的缩放\裁剪\补边\色调\明暗\直方图\Gamma曲线
			色调\明暗\饱和度(HSV)空间:
				是颜色在人体感觉的一种新的描述方案:这种表达方案不需要考虑三个通道的相关性;
					H(色调,Hue) 			[0,180)
					S(饱和度,Saturation)	[0,256)
					V(明暗度,Value)			[0,256)

		e.
		r.
	3.图像的仿射变换:
		具体涉及到图像的形状角度变化.
			主要是缩放/旋转/剪切/翻转/平移等组合.
				仿射变换矩阵是一个2*3的矩阵:
				 [
				 	a00	a01	|  a02
				 	a10 a11 |  a12
				 ]

			a02 a12 是平移项
			前面的2*2是线性变化项
				0.5	0
				0	0.5  图像变成原来的1/4. opencv 从左上开始计算;

	4.图像的位操作:
		关于使用mask的操作,制作PCB的蚀刻类似,mask阻挡住了图像的蚀刻
		白色的为1 黑色的为0


	5.图像阈值:图像像素高于阈值,赋予一个值,反之可以赋予其他值.
		https://blog.csdn.net/keith_bb/article/details/54617625
		https://blog.csdn.net/qq_34510308/article/details/64556590
		简单阈值:
			全局阈值,将图像分割成非黑即白的二值图像 函数cv2.threshold()
				cv2.THRESH_BINARY (黑白)
				cv2.THRESH__BINARY_INV (黑白二值反转)
				cv2.THRESH__TRUNC (截断阈值化)
				cv2.THRESH__TOZERO (阈值化为0)
				cv2.THRESH__TOZERO_INV (反阈值化为0)
		自适应阈值:
			局部阈值,选定特定的大小,用像素点与特定大小像素点的平均值(或者其他特征)比较,来确定该点是黑还是白.
			使用函数cv2.adaptiveThreshold()
		
		Otsu's二值化
			函数cv2.threshold()函数返回2个值,第一个值是图像的阈值,对于图像的阈值选择寻找合适的阈值很对图像的操作很重要.
			可以认为Otus's 阈值就是是一个好的选择,Otus's 适合图像灰度直方图具有双峰的情况.